<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="1.MyString">
      <UniqueIdentifier>{afc6b8e3-53d1-4ccc-abb8-afe7fa145021}</UniqueIdentifier>
    </Filter>
    <Filter Include="2.SingleTon">
      <UniqueIdentifier>{d93e9cfb-51b5-483a-86f5-3ea06106cf83}</UniqueIdentifier>
    </Filter>
    <Filter Include="3.FindNumber">
      <UniqueIdentifier>{e7566ffb-eb00-448b-8b34-4665c7697e65}</UniqueIdentifier>
    </Filter>
    <Filter Include="4.SpaceTo%2520">
      <UniqueIdentifier>{d5a23cbf-cf0a-46d9-8d6b-8b664ea419f6}</UniqueIdentifier>
    </Filter>
    <Filter Include="5.PrintListFromTail">
      <UniqueIdentifier>{8069a430-85a8-4f98-9436-5b37f4be8dae}</UniqueIdentifier>
    </Filter>
    <Filter Include="6.ReBuildBinaryTree">
      <UniqueIdentifier>{6b75a212-c943-4a86-99ce-f5f9cd8f7f81}</UniqueIdentifier>
    </Filter>
    <Filter Include="7.TwoStackToQueue">
      <UniqueIdentifier>{fe6baa41-3974-4017-879d-fd146593f5c3}</UniqueIdentifier>
    </Filter>
    <Filter Include="8.FindMinFromArr">
      <UniqueIdentifier>{870e153b-a9ef-450b-8f63-5662c2d49edc}</UniqueIdentifier>
    </Filter>
    <Filter Include="9.Fibonacci">
      <UniqueIdentifier>{cb7a0789-9ebc-41ae-bb52-0b48f1ba3449}</UniqueIdentifier>
    </Filter>
    <Filter Include="11.DoublePower">
      <UniqueIdentifier>{70e66369-a202-4c0d-b42e-96f932e61443}</UniqueIdentifier>
    </Filter>
    <Filter Include="10.CountNumberOf1">
      <UniqueIdentifier>{36d9ab80-f5ac-4df0-b747-2588b23e282c}</UniqueIdentifier>
    </Filter>
    <Filter Include="12.PrintNNumber">
      <UniqueIdentifier>{2ceab9da-0952-4e72-887a-12461ef5eea3}</UniqueIdentifier>
    </Filter>
    <Filter Include="13.DeleteNodeO1">
      <UniqueIdentifier>{d7de0dda-af00-45a8-8792-0d248ce743c8}</UniqueIdentifier>
    </Filter>
    <Filter Include="14.AdjustSort">
      <UniqueIdentifier>{db267775-1ca3-4d35-9fa2-721461178807}</UniqueIdentifier>
    </Filter>
    <Filter Include="15.TheKNode">
      <UniqueIdentifier>{55093883-35d4-4470-a2e1-57e2f90d37d3}</UniqueIdentifier>
    </Filter>
    <Filter Include="16.ReverseList">
      <UniqueIdentifier>{e32ec57a-4661-40c2-8ce2-def6a2779a98}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header">
      <UniqueIdentifier>{b22901c4-0aa0-4282-9c72-fc8b5d481f70}</UniqueIdentifier>
    </Filter>
    <Filter Include="17.MergeList">
      <UniqueIdentifier>{0fd6d8de-1152-4c54-9a86-21622ad0e951}</UniqueIdentifier>
    </Filter>
    <Filter Include="18.SonOfBianryTree">
      <UniqueIdentifier>{bb769f76-e688-407d-8ec5-c04b4d24a6d0}</UniqueIdentifier>
    </Filter>
    <Filter Include="19.MirrorBinaryTree">
      <UniqueIdentifier>{d800f0fa-202f-4bde-88bd-d314ec619fb0}</UniqueIdentifier>
    </Filter>
    <Filter Include="20.PrintMatrixClockWisely">
      <UniqueIdentifier>{30070a41-6a10-4595-8fda-53d04ba2e34a}</UniqueIdentifier>
    </Filter>
    <Filter Include="21.StackToMin">
      <UniqueIdentifier>{91edb56e-9100-4e46-a2f7-49e67d441fb0}</UniqueIdentifier>
    </Filter>
    <Filter Include="22.PushAndPop">
      <UniqueIdentifier>{17a036d0-a7f6-42e8-b4d5-6eab85e38418}</UniqueIdentifier>
    </Filter>
    <Filter Include="23.PrintBinaryTreeFloat">
      <UniqueIdentifier>{f7ecaa88-9794-4ed8-abb8-b4848cbb46a0}</UniqueIdentifier>
    </Filter>
    <Filter Include="24.VerifyTheSort">
      <UniqueIdentifier>{ee923cee-5624-4495-8768-807479c87f0e}</UniqueIdentifier>
    </Filter>
    <Filter Include="25.BinaryTreePath">
      <UniqueIdentifier>{79cd9d75-9104-43a6-9222-038694124c02}</UniqueIdentifier>
    </Filter>
    <Filter Include="26.ComplexList">
      <UniqueIdentifier>{68424b4b-4b2f-4c11-b025-d5e7b2ae7eb6}</UniqueIdentifier>
    </Filter>
    <Filter Include="27.BinaryTreeToList">
      <UniqueIdentifier>{64a7eee9-0328-489e-bda0-2b4831dd3204}</UniqueIdentifier>
    </Filter>
    <Filter Include="28.StringPermutation">
      <UniqueIdentifier>{ab5189e8-499e-427c-9326-9a247e7d5907}</UniqueIdentifier>
    </Filter>
    <Filter Include="29.MoreThanHalfNumber">
      <UniqueIdentifier>{6f68b998-1d1c-40f0-856f-93698ae23c86}</UniqueIdentifier>
    </Filter>
    <Filter Include="30.GetLeastNumbers">
      <UniqueIdentifier>{06548f22-ebae-4b43-b079-1db2be1aabba}</UniqueIdentifier>
    </Filter>
    <Filter Include="31.MaxSumOfArraySon">
      <UniqueIdentifier>{897dedf4-2afd-4e6c-905d-a15ab6ec3073}</UniqueIdentifier>
    </Filter>
    <Filter Include="32.NumberOf1">
      <UniqueIdentifier>{97f356c0-b5cc-4071-8fdc-39b51658a9e1}</UniqueIdentifier>
    </Filter>
    <Filter Include="33.SortArrayMinNumber">
      <UniqueIdentifier>{9484277c-d569-4ed8-a552-067bd0ed30e1}</UniqueIdentifier>
    </Filter>
    <Filter Include="34.UglyNumber">
      <UniqueIdentifier>{0b67f921-1e80-4f67-85e5-f98a23d40bc5}</UniqueIdentifier>
    </Filter>
    <Filter Include="35.FirstNotRepeatChar">
      <UniqueIdentifier>{6fbc1194-aa44-4916-86c4-0642542a4866}</UniqueIdentifier>
    </Filter>
    <Filter Include="36.InverseParis">
      <UniqueIdentifier>{1096ac4a-d6b8-43d6-aeca-a9277e5220ea}</UniqueIdentifier>
    </Filter>
    <Filter Include="37.FindFirstCommandNode">
      <UniqueIdentifier>{a4e56035-875f-4ff4-a207-6b10459cd6a2}</UniqueIdentifier>
    </Filter>
    <Filter Include="38.GetCountOfK">
      <UniqueIdentifier>{6d5c2b78-159e-48f9-a4ef-72ee07dd671c}</UniqueIdentifier>
    </Filter>
    <Filter Include="39.TreeDepth">
      <UniqueIdentifier>{08adfe91-e812-49a2-9bac-a96b016d7efc}</UniqueIdentifier>
    </Filter>
    <Filter Include="39-2.IsBalanceTree">
      <UniqueIdentifier>{c7686427-8f4d-4352-a6ee-8ebada74694e}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="MyString.cpp">
      <Filter>1.MyString</Filter>
    </ClCompile>
    <ClCompile Include="again.cpp">
      <Filter>1.MyString</Filter>
    </ClCompile>
    <ClCompile Include="SingleTon.cpp">
      <Filter>2.SingleTon</Filter>
    </ClCompile>
    <ClCompile Include="FindNumber.cpp">
      <Filter>3.FindNumber</Filter>
    </ClCompile>
    <ClCompile Include="SpaceToOther.cpp">
      <Filter>4.SpaceTo%2520</Filter>
    </ClCompile>
    <ClCompile Include="PrintListFromTail.cpp">
      <Filter>5.PrintListFromTail</Filter>
    </ClCompile>
    <ClCompile Include="ReBuildBinaryTree.cpp">
      <Filter>6.ReBuildBinaryTree</Filter>
    </ClCompile>
    <ClCompile Include="ReBuildBinaryTreeAgain.cpp">
      <Filter>6.ReBuildBinaryTree</Filter>
    </ClCompile>
    <ClCompile Include="BinaryTreeNode.cpp">
      <Filter>6.ReBuildBinaryTree</Filter>
    </ClCompile>
    <ClCompile Include="TwoStackToQueue.cpp">
      <Filter>7.TwoStackToQueue</Filter>
    </ClCompile>
    <ClCompile Include="FindMinFromArr.cpp">
      <Filter>8.FindMinFromArr</Filter>
    </ClCompile>
    <ClCompile Include="Fibonacci.cpp">
      <Filter>9.Fibonacci</Filter>
    </ClCompile>
    <ClCompile Include="CountNumberOf1.cpp">
      <Filter>10.CountNumberOf1</Filter>
    </ClCompile>
    <ClCompile Include="DoublePower.cpp">
      <Filter>11.DoublePower</Filter>
    </ClCompile>
    <ClCompile Include="PrintNnumber.cpp">
      <Filter>12.PrintNNumber</Filter>
    </ClCompile>
    <ClCompile Include="AnotherWayToPrintNumber.cpp">
      <Filter>12.PrintNNumber</Filter>
    </ClCompile>
    <ClCompile Include="DeleteNodeO1.cpp">
      <Filter>13.DeleteNodeO1</Filter>
    </ClCompile>
    <ClCompile Include="AdjustSort.cpp">
      <Filter>14.AdjustSort</Filter>
    </ClCompile>
    <ClCompile Include="TheKNode.cpp">
      <Filter>15.TheKNode</Filter>
    </ClCompile>
    <ClCompile Include="ReverseList.cpp">
      <Filter>16.ReverseList</Filter>
    </ClCompile>
    <ClCompile Include="MergeTwoList.cpp">
      <Filter>17.MergeList</Filter>
    </ClCompile>
    <ClCompile Include="SonOfBinaryTree.cpp">
      <Filter>18.SonOfBianryTree</Filter>
    </ClCompile>
    <ClCompile Include="againSonOfBinaryTreeNode.cpp">
      <Filter>18.SonOfBianryTree</Filter>
    </ClCompile>
    <ClCompile Include="MirrorBinaryTree.cpp">
      <Filter>19.MirrorBinaryTree</Filter>
    </ClCompile>
    <ClCompile Include="AgainMirrorTree.cpp">
      <Filter>19.MirrorBinaryTree</Filter>
    </ClCompile>
    <ClCompile Include="PrintMatrixClock.cpp">
      <Filter>20.PrintMatrixClockWisely</Filter>
    </ClCompile>
    <ClCompile Include="StackToMin.cpp">
      <Filter>21.StackToMin</Filter>
    </ClCompile>
    <ClCompile Include="PushAndPop.cpp">
      <Filter>22.PushAndPop</Filter>
    </ClCompile>
    <ClCompile Include="PrintBinaryTreeFloat.cpp">
      <Filter>23.PrintBinaryTreeFloat</Filter>
    </ClCompile>
    <ClCompile Include="VerifyTheSort.cpp">
      <Filter>24.VerifyTheSort</Filter>
    </ClCompile>
    <ClCompile Include="BinaryTreeNodePath.cpp">
      <Filter>25.BinaryTreePath</Filter>
    </ClCompile>
    <ClCompile Include="againBinaryTreePath.cpp">
      <Filter>25.BinaryTreePath</Filter>
    </ClCompile>
    <ClCompile Include="CopyComplexList.cpp">
      <Filter>26.ComplexList</Filter>
    </ClCompile>
    <ClCompile Include="BinaryTreeToList.cpp">
      <Filter>27.BinaryTreeToList</Filter>
    </ClCompile>
    <ClCompile Include="againBinaryTreeToList.cpp">
      <Filter>27.BinaryTreeToList</Filter>
    </ClCompile>
    <ClCompile Include="againBinaryTreeNode.cpp">
      <Filter>27.BinaryTreeToList</Filter>
    </ClCompile>
    <ClCompile Include="StringPermutation.cpp">
      <Filter>28.StringPermutation</Filter>
    </ClCompile>
    <ClCompile Include="AgainStringPermutation.cpp">
      <Filter>28.StringPermutation</Filter>
    </ClCompile>
    <ClCompile Include="MoreThanHalfNumber.cpp">
      <Filter>29.MoreThanHalfNumber</Filter>
    </ClCompile>
    <ClCompile Include="againMoreThanHalfNumber.cpp">
      <Filter>29.MoreThanHalfNumber</Filter>
    </ClCompile>
    <ClCompile Include="GetLeastNumbers.cpp">
      <Filter>30.GetLeastNumbers</Filter>
    </ClCompile>
    <ClCompile Include="MaxSumOfArraySon.cpp">
      <Filter>31.MaxSumOfArraySon</Filter>
    </ClCompile>
    <ClCompile Include="NumberOf1.cpp">
      <Filter>32.NumberOf1</Filter>
    </ClCompile>
    <ClCompile Include="againNumberOf1.cpp">
      <Filter>32.NumberOf1</Filter>
    </ClCompile>
    <ClCompile Include="SortArrayMinNumber.cpp">
      <Filter>33.SortArrayMinNumber</Filter>
    </ClCompile>
    <ClCompile Include="UglyNumber.cpp">
      <Filter>34.UglyNumber</Filter>
    </ClCompile>
    <ClCompile Include="FirstNotRepeatChar.cpp">
      <Filter>35.FirstNotRepeatChar</Filter>
    </ClCompile>
    <ClCompile Include="InverseParis.cpp">
      <Filter>36.InverseParis</Filter>
    </ClCompile>
    <ClCompile Include="againInverseParis.cpp">
      <Filter>36.InverseParis</Filter>
    </ClCompile>
    <ClCompile Include="againAgainInverseParis.cpp">
      <Filter>36.InverseParis</Filter>
    </ClCompile>
    <ClCompile Include="FindFirstCommandNode.cpp">
      <Filter>37.FindFirstCommandNode</Filter>
    </ClCompile>
    <ClCompile Include="GetCountOfK.cpp">
      <Filter>38.GetCountOfK</Filter>
    </ClCompile>
    <ClCompile Include="TreeDepth.cpp">
      <Filter>39.TreeDepth</Filter>
    </ClCompile>
    <ClCompile Include="IsBalanceTree.cpp">
      <Filter>39-2.IsBalanceTree</Filter>
    </ClCompile>
    <ClCompile Include="AgainIsBalance.cpp">
      <Filter>39-2.IsBalanceTree</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Lock.h">
      <Filter>2.SingleTon</Filter>
    </ClInclude>
    <ClInclude Include="ListNode.h">
      <Filter>Header</Filter>
    </ClInclude>
    <ClInclude Include="BinaryTreeNode.h">
      <Filter>Header</Filter>
    </ClInclude>
    <ClInclude Include="MinStack.h">
      <Filter>Header</Filter>
    </ClInclude>
    <ClInclude Include="ComplexList.h">
      <Filter>Header</Filter>
    </ClInclude>
    <ClInclude Include="array.h">
      <Filter>Header</Filter>
    </ClInclude>
  </ItemGroup>
</Project>